# Generated by Django 2.2.5 on 2020-02-20 04:05

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SIMSSubject',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Subject', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'sims].[DataDashboard_subject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SIMSTeacher',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title_des', models.CharField(blank=True, max_length=100, null=True)),
                ('firstname', models.CharField(blank=True, max_length=500, null=True)),
                ('lastname', models.CharField(blank=True, max_length=500, null=True)),
                ('full_name', models.CharField(blank=True, max_length=500, null=True)),
                ('staff_code', models.CharField(blank=True, max_length=10, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'db_table': 'sims].[DataDashboard_teachers',
                'ordering': ['staff_code'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_id', models.IntegerField()),
                ('first_name', models.CharField(max_length=1000)),
                ('last_name', models.CharField(max_length=1000)),
                ('preferred_forename', models.CharField(max_length=1000)),
                ('gender', models.CharField(max_length=1000)),
                ('parent_email', models.EmailField(max_length=1000)),
                ('parent_salutation', models.CharField(max_length=1000)),
                ('student_email', models.EmailField(max_length=1000)),
                ('house_id', models.CharField(max_length=1000)),
                ('tutor_group_id', models.CharField(max_length=1000)),
                ('full_name', models.CharField(max_length=1000)),
                ('EAL_status', models.CharField(max_length=1000)),
                ('SEN_status', models.CharField(max_length=1000)),
                ('exam_candidate_number', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'sims].[DataDashboard_student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeachingGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('teaching_group', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'sims].[DataDashboard_teachinggroup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendanceSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period', models.IntegerField()),
                ('phase', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CSVDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LocalStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('preferred_forename', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('sen_status', models.CharField(blank=True, max_length=100, null=True)),
                ('eal_status', models.CharField(blank=True, max_length=100, null=True)),
                ('exam_candidate_number', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('parent_salutation', models.CharField(blank=True, max_length=150, null=True)),
                ('student_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.House')),
            ],
            options={
                'ordering': ['student_id'],
            },
        ),
        migrations.CreateModel(
            name='LocalTeachingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('students', models.ManyToManyField(blank=True, to='DataDashboard.LocalStudent')),
            ],
        ),
        migrations.CreateModel(
            name='Marksheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('classgroups', models.ManyToManyField(blank=True, to='DataDashboard.LocalTeachingGroup')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.Department')),
                ('factulty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='SummativeScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_des', models.CharField(blank=True, max_length=100, null=True)),
                ('firstname', models.CharField(blank=True, max_length=500, null=True)),
                ('lastname', models.CharField(blank=True, max_length=500, null=True)),
                ('full_name', models.CharField(blank=True, max_length=500, null=True)),
                ('staff_code', models.CharField(blank=True, max_length=10, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['staff_code'],
            },
        ),
        migrations.CreateModel(
            name='TeachingStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy', models.TextField(null=True)),
                ('created', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='TeachingStrategyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='YearGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=10)),
                ('integer_year', models.IntegerField(null=True)),
                ('heads_of_year', models.ManyToManyField(blank=True, to='DataDashboard.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TutorGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
                ('tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.Teacher')),
                ('year_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.YearGroup')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingStrategyResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('title', models.CharField(max_length=260)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.TeachingStrategy')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingStrategyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('vote', models.IntegerField(blank=True, choices=[(1, 'Upvote'), (-1, 'Downvote')], null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET, to='DataDashboard.Teacher')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.TeachingStrategy')),
                ('students', models.ManyToManyField(to='DataDashboard.LocalStudent')),
            ],
        ),
        migrations.AddField(
            model_name='teachingstrategy',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.TeachingStrategyCategory'),
        ),
        migrations.AddField(
            model_name='teachingstrategy',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='teachingstrategy',
            name='students',
            field=models.ManyToManyField(to='DataDashboard.LocalStudent'),
        ),
        migrations.CreateModel(
            name='SummativeDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_score', models.IntegerField(null=True)),
                ('min_score', models.IntegerField(null=True)),
                ('increment', models.FloatField(null=True)),
                ('scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.SummativeScheme')),
            ],
        ),
        migrations.CreateModel(
            name='SummativeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('value', models.FloatField(null=True)),
                ('letter_value', models.CharField(blank=True, max_length=20, null=True)),
                ('raw_value', models.TextField(blank=True, null=True)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.SummativeDefinition')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.LocalStudent')),
            ],
        ),
        migrations.CreateModel(
            name='MarksheetFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('max_score', models.IntegerField(blank=True, null=True)),
                ('min_score', models.IntegerField(blank=True, null=True)),
                ('increment', models.FloatField(default=1)),
                ('marksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.Marksheet')),
            ],
        ),
        migrations.CreateModel(
            name='MarksheetData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('numerical_value', models.FloatField(blank=True, null=True)),
                ('text_value', models.TextField(blank=True, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.MarksheetFields')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataDashboard.LocalStudent')),
            ],
        ),
        migrations.AddField(
            model_name='localteachinggroup',
            name='teachers',
            field=models.ManyToManyField(blank=True, to='DataDashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='localstudent',
            name='tutor_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.TutorGroup'),
        ),
        migrations.AddField(
            model_name='localstudent',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='house',
            name='head_of_house',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hoh', to='DataDashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='hof',
            field=models.ManyToManyField(blank=True, related_name='hof', to='DataDashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='staff',
            field=models.ManyToManyField(blank=True, to='DataDashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DataDashboard.Faculty'),
        ),
        migrations.AddField(
            model_name='department',
            name='hod',
            field=models.ManyToManyField(blank=True, related_name='hod', to='DataDashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='department',
            name='staff',
            field=models.ManyToManyField(blank=True, to='DataDashboard.Teacher'),
        ),
    ]
